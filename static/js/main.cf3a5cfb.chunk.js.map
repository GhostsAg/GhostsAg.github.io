{"version":3,"sources":["components/Header/index.js","components/ElemContainer/index.js","components/UserCard/index.js","components/Wrapper/index.js","components/Navtab/index.js","components/About/index.js","components/AppCard/index.js","components/Portfolio/index.js","components/Contact/index.js","components/ContentCard/index.js","components/pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","ElemContainer","props","addClass","children","UserCard","img","alt","name","jobTitle","href","github","Wrapper","NavTabs","location","useLocation","to","pathname","About","id","AppCard","appName","link","info","repo","Portfolio","ContactCard","class","ContentCard","path","component","Contact","exact","from","Home","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf3a5cfb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <div className=\"header row z-depth-4\">\n            <span className=\"col s4 push-s2 push-l4\"><img src={process.env.PUBLIC_URL + \"/images/AG-logo.png\"}></img></span>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\n// Add ElemContainer always as props to use the imported style.css\nfunction ElemContainer(props) {\n  return <div className={props.addClass}>{props.children}</div>;\n}\n\nexport default ElemContainer;\n","import React from \"react\";\nimport ElemContainer from \"../ElemContainer\";\nimport \"./style.css\";\n\nfunction UserCard(props) {\n    return (\n        <ElemContainer addClass=\"elemContainer col l4\">\n            <img className=\"pic\" src={props.img} alt=\"UserId\"></img>\n            <h3>{props.name}</h3>\n            <p>{props.jobTitle}</p>\n            <br></br>\n            <a href={props.github}>Github</a>\n        </ElemContainer>\n    );\n}\n\nexport default UserCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction NavTabs() {\n    const location = useLocation();\n\n    return (\n        <ul className=\"row\">\n            <li className = \"nav-item col s4\">\n                <Link to = \"/about\" className = { location.pathname === \"/about\" ? \"nav-link active\" : \"nav-link\" } >\n                    About\n                </Link>\n            </li>\n            <li className = \"nav-item col s4\">\n                <Link to = \"/portfolio\" className = { location.pathname === \"/portfolio\" ? \"nav-link active\" : \"nav-link\" } >\n                    My Apps\n                </Link>\n            </li>\n            <li className = \"nav-item col s4\">\n                <Link to = \"/contact\" className = { location.pathname === \"/portfolio\" ? \"nav-link active\" : \"nav-link\" } >\n                    Message\n                </Link>\n            </li>\n        </ul>\n    );\n}\n\nexport default NavTabs;","import React from \"react\";\nimport \"./style.css\";\n\nfunction About() {\n    return (\n        <div className = \"row\">\n            <div className=\"col s12\">\n            <p>I aspire to be a programs design engineer.</p>\n                <ul id=\"list\">\n                Programming Interest:\n                    <li>Computer Vision</li>\n                    <li>Machine Learning</li>\n                    <li>Data Manipulation</li>\n                    <li>Languages I am familiar with:</li>\n                </ul>    \n                <ul id=\"list\">\n                    Programming Languages:\n                    <li>C/C++</li>\n                    <li>Matlab</li>\n                    <li>Javascript</li>\n                    <li>Python</li>\n                </ul>\n                <p>In my off time I like to learn and talk about creative topics. Most of the time they have to do with the financial world or engineering.</p>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import React from \"react\";\nimport \"./style.css\";\n\n// props: img, appName, link, info and repo.\nfunction AppCard(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"card-image waves-effect waves-block waves-light\">\n                <img className=\"activator\" src={props.img} />\n            </div>\n            <div className=\"card-content\">\n                <span id=\"appName\" className=\"card-title activator grey-text text-darken-4\">{props.appName}<i className=\"material-icons right\">more_vert</i></span>\n                <p><a href={props.link}>Open App</a></p>\n            </div>\n            <div className=\"card-reveal\">\n                <span id=\"appName\" className=\"card-title grey-text text-darken-4\">{props.appName}<i className=\"material-icons right\">close</i></span>\n                <p id=\"info\">{props.info}</p>\n                <p><a href={props.repo}>Repo</a></p>\n            </div>\n        </div>\n    );\n}\n\nexport default AppCard;","import React from \"react\";\nimport AppCard from \"../AppCard\";\nimport \"./style.css\";\n\nfunction Portfolio() {\n    return (\n        <div className = \"row\">\n            <div className = \"col s6 m4 l4\">\n                <AppCard img={process.env.PUBLIC_URL + \"/images/Employee-Database.png\"} \n                    appName=\"Employee Databse\"\n                    link=\"https://github.com/GhostsAg/EmployeeTracker\"\n                    info=\"Command-line application that allows you to input and manipulate employee data by departments, roles, and salary.\"\n                    repo=\"https://github.com/GhostsAg/EmployeeTracker\"\n                />\n            </div>\n            <div className = \"col s6 m4 l4\">\n                <AppCard img={process.env.PUBLIC_URL + \"/images/Contract-Bay.png\"}\n                    appName=\"Contract Bay\"\n                    link=\"https://polar-island-40995.herokuapp.com/\"\n                    info=\"Contract accessibility web application to close the gap between supplier and manufacturer.\"\n                    repo=\"https://github.com/robertharris95/Project-2\"\n                />\n            </div>\n            <div className = \"col s6 m4 l4\">\n                <AppCard img={process.env.PUBLIC_URL + \"/images/WeatherDash.png\"}\n                    appName=\"Weather Dashboard\"\n                    link=\"https://ghostsag.github.io/WeatherDashboard/\"\n                    info=\"Weather forecast web application. Get information about the upcoming 5-days of any city.\"\n                    repo=\"https://github.com/GhostsAg/WeatherDashboard\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Portfolio;","import React from \"react\";\nimport \"./style.css\";\n\nfunction ContactCard() {\n    return (\n        <div className=\"row\">\n            <h3><i class=\"fas fa-wrench\"></i> Under Construction</h3>\n        </div>\n    );\n}\n\nexport default ContactCard;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport ElemContainer from \"../ElemContainer\";\nimport NavTab from \"../Navtab\";\nimport About from \"../About\";\nimport Portfolio from \"../Portfolio\";\nimport Contact from \"../Contact\";\nimport \"./style.css\";\n\n\nfunction ContentCard() {\n    return (\n        <ElemContainer addClass=\"elemContainer col l6\">\n            <Router>\n                <NavTab />\n                <Route path={`/about`} component={About} />\n                <Route path={`/portfolio`} component={Portfolio} />\n                <Route path={`/contact`} component={Contact} />\n                <Redirect exact from=\"/\" to=\"/about\" />\n            </Router>\n        </ElemContainer>\n    );\n}\n\nexport default ContentCard;","import React from \"react\";\nimport Header from \"../Header\";\nimport UserCard from \"../UserCard\";\nimport Wrapper from \"../Wrapper\";\nimport ContentCard from \"../ContentCard\";\n\nfunction Home() {\n    return (\n        <Wrapper>\n            <Header />\n            <UserCard img = {process.env.PUBLIC_URL + \"/images/Profile-pic.jpeg\"}\n                name = {\"Andres Agustin Ledesma\"}\n                jobTitle = {\"Full-Stack Web Developer\"}\n                github = {\"https://github.com/GhostsAg\"} \n                />\n            <ContentCard />\n        </Wrapper>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\n//@@ todo look into a logo.svg\nimport \"./App.css\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import Wrapper from \"./components/Wrapper\";\n// import NavTabs from \"./components/Navtab\";\nimport Home from \"./components/pages/Home\";\n// import Header from \"./components/Header\";\n// import UserCard from \"./components/UserCard\";\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}